{
    "manageUser": "User Management",
    "manageComp": "Competition Management",
    "teamList": "List of all teams",
    "managePg": "Playground Management",
    "robotConf": "Robot Confirmation",

    "tokenNone": "Token not provided.",
    "teamLoadFail": "Failed to load teams or the data is not in the correct format.",
    "teamLoadError": "Error loading teams:",
    "teamTitle": "All Teams",
    "teamName": "Team Name",
    "leader": "Leader",
    "members": "Members",

    "dataFetchFail": "Failed to load data.",
    "dataFetchError": "Error loading data:",
    "registeredTeams": "Teams registered for year {{year}}",
    "teamID": "Team ID",
    "category": "Category",
    "noRegsFound": "No registrations found for this year.",

    "error": "Error: {{error}} - {{message}}",
    "somethingWrong": "Something went wrong",
    "serverError": "A server error occurred",
    "compUpdateError": "Error updating competition: {{message}}",
    "compWrongFill": "Please fill in all fields correctly.",
    "compFetchFail": "Failed to load competitions.",
    "compFetchError": "Error loading competitions:",
    "compStartConfirm": "Do you really want to start this competition?",
    "compStarted": "Competition has started",
    "compStartError": "Error starting competition: {{message}}",
    "mustLogin": "You must be logged in to perform this action.",
    "compCreateError": "Error creating competition: {{message}}",
    "compRemoveConfirm": "Are you sure you want to delete this competition?",
    "compRemoveFail": "Failed to remove competition",
    "compRemoveError": "Error deleting competition: {{message}}",
    "compAdd": "Add Competition",
    "compAddNew": "Add New Competition",
    "id": "ID",
    "year": "Year",
    "date": "Date",
    "start": "Start",
    "end": "End",
    "save": "Save",
    "cancel": "Cancel",
    "robogamesYear": "ROBOGAMES {{year}}",
    "id_colon": "ID:",
    "date_colon": "Date:",
    "start_colon": "Start: ",
    "end_colon": "End:",
    "started_colon": "Started:",
    "begin": "Start",
    "edit": "Edit",
    "compEdit": "Edit Competition",
    "confirm": "Confirm",
    "close": "Close",
    "showParticipants": "Show Participants",
    "noComps": "No competitions created.",

    "unreg": "Are you sure you want to cancel the registration?",
    "dataError": "Error: {{data}}",
    "unknownError": "An unknown error occurred",
    "unregImpossible":"Cancellation of registration was not possible: a team robot has already been confirmed.",
    "unregFail": "Could not cancel the registration: {{message}}",
    "unregError": "An error occurred while canceling the team's registration.",
    "regConfirm": "Do you really want to register?",
    "regSuccess": "The team was successfully registered.",
    "regFail": "Registration could not be completed: {{message}}",
    "regTeamError": "An error occurred during team registration.",
    "compsAvailable": "Available competitions",
    "loading": "Loading...",
    "compDate_colon": "Competition date: ",
    "endExpect": "Expected end: ",
    "regImpossible": "The competition has already started. Registration and robot edits are not possible.",
    "robotRegPossible": "You are registered in this competition. You can now register and manage your robots.",
    "manageRobots": "MANAGE ROBOTS",
    "regCancel": "Cancel registration",
    
    "dipGives": "awards",
    "diploma_caps": "DIPLOMA",
    "dipTeam": "to the team",
    "dipPlace": "for {{place}}. place",
    "dipComp": "in the competition",
    "dipDisc": "In the discipline ",
    "dipDate": "In Zlín on ",
    "dipDean": "Dean of the Faculty",
    "highAge": "15 and older",
    "lowAge": "Up to 15 years",
    "catInvalid": "The selected category is invalid.",
    "catNotFound": "The selected category was not found.",
    "resFetchFail": "Failed to load results: {{data}}",
    "resFetchError": "An error occurred while loading results: {{message}}",
    "serverCommFail": "Failed to communicate with the server",
    "serverCommError": "Error communicating with the server.",
    "compResults": "Competition results",
    "selectYear": "Select year",
    "selectDisc": "Select discipline",
    "selectCat": "Select category",
    "place": "Placement",
    "robot": "Robot",
    "team": "Team",
    "score": "Score",
    "discipline": "Discipline",
    "diploma": "Diploma",
    "noRobotsFound": "No robots competed in this year, category and discipline.",
    
    "organizer": "Main competition organizer",
    "utb": "Tomas Bata University in Zlín",
    "fai": "Faculty of Applied Informatics",
    "institute": "Institute of Informatics and Artificial Intelligence",
    "phone": "tel.: {{number}}",
    "mobile": "mobile: {{number}}",
    "organisation": "Organizational matters",
    "dean": "Dean of FAI TBU in Zlín",

    "homeWelcome": "Welcome to Robogames!",
    "homeP1": "Robogames is a\u00a0competition organized by the Faculty of Applied Informatics of Tomas Bata University in Zlín since 2017.",
    "homeP2": "The competition takes place at the Faculty of Applied Informatics.",
    "homeP3": "The competition is intended for secondary and university students, primary school pupils, members of robotics clubs, and other enthusiasts from the general public.",
    "homeCompTitle": "Upcoming Competition - ROBOGAMES {{year}}",
    "homeDate": "Date: {{date}}",
    "homeStart": "Start: {{time}}",
    "homeEnd": "End: {{time}}",
    "register": "Register",
    "results": "Results",
    "sponsors": "Our Sponsors",
    
    "login": "Login",
    "mail": "E-mail",
    "mailEnter": "Enter e-mail",
    "password": "Password",
    "passwordEnter": "Enter password",
    "log": "Log in",
    "noAccount": "Don't have an account yet?",
    
    "pgChoose": "Playground selection",
    "pgID": "ID - {{id}}",
    "pgDisc": "Discipline: {{name}}",
    "pgNum": "Playground number: {{number}}",

    "teamShowLogin": "Please log in to view the team.",
    "inNoTeam": "You are not a\u00a0member of any team. To participate, create a\u00a0new team or ask the creator of another team to send you an invitation.",
    "teamFetchFail": "Failed to load team data.",
    "leaderUnknown":"Unknown team leader",
    "teamCreateLogin": "You must be logged in to create a\u00a0team.",
    "teamExists": "A team with this name already exists.",
    "teamCreateFail": "Failed to create team.",
    "teamRenameFail":"Failed to rename team.",
    "teamRenamed":"Team was successfully renamed.",
    "teamRemoveUser": "Are you sure you want to remove this member from the team?",
    "teamUserRemoved": "The member was successfully removed from the team.",
    "teamUserRemoveFail": "Failed to remove team member.",
    "teamUserRemoveError": "Error while removing team member.",
    "teamLeaveCheck": "Are you sure you want to leave the team?",
    "teamRemoveCheck": "Are you sure you want to delete the team?",
    "teamRemoved": "The team was successfully deleted.",
    "teamRemoveFail": "Failed to delete the team.",
    "inviteUser": "Do you really want to invite this user to the team?",
    "inviteSent": "Invitation sent successfully",
    "somethingFailed": "Something went wrong.",
    "teamCreate": "Create team",
    "teamCreateNew": "Create a\u00a0new team",
    "nameEg": "(e.g., SEMPA, John Doe, ...)",
    "create": "Create",
    "teamRename":"Rename team",
    "rename":"Rename",
    "name": "First name",
    "surname": "Last name",
    "teamLeader": "Team leader:",
    "regYears": "Registration years:",
    "teamAddUser": "Add user to team",
    "findUser": "Find user",
    "enterMailName": "Enter e-mail or name",
    "teamLeave": "Leave team",
    "teamRemove": "Delete team",
    "registerHere": "YOU CAN REGISTER FOR THE COMPETITION HERE",
    "compRegister": "Registration for ROBOGAMES competition",

    "scoreRecorded": "Score was recorded successfully.",
    "scoreSubmitError": "Error saving score: {{message}}",
    "matchesRemoved": "All matches were removed successfully.",
    "matchesRemoveFail": "Could not remove matches.",
    "matchesRemoveError": "Error removing matches: {{message}}",
    "matchRemoveCheck": "Are you sure you want to delete this match?",
    "matchRemoved": "Match was removed successfully.",
    "matchRemoveFail": "Could not remove match.",
    "matchRemoveError": "Error removing match: {{message}}",
    "matchFetchFail": "Failed to load matches: {{message}}",
    "matchFetchError": "Error loading matches: {{message}}",
    "matchesCreated": "Matches were created successfully.",
    "matchesCreateError": "Error creating matches: {{message}}",
    "genMatches": "Generate matches (round-robin)",
    "newTry": "New attempt",
    "students": "Students and adults",
    "pupils": "Primary school pupils",
    "matchGroup": "Match - Group {{index}}",
    "state": "Status",
    "robotName": "Robot name",
    "robotNum": "Robot number",
    "matchDone": "Completed",
    "matchWaiting": "Awaiting evaluation",
    "eval": "Evaluate",
    "matchNum": "Match No. {{index}}",
    "enterScore": "Enter score",
    "matchScorePH": "For Robosumo: 1 = win, 0 = loss; line follower: 8:14",
    
    "pgIdRequired": "Playground ID is required for deletion.",
    "pgRemoveCheck": "Are you sure you want to delete this playground?",
    "pgRemoved": "Playground was removed successfully.",
    "pgRemoveFail": "Could not remove playground: {{message}}",
    "pgRemoveError": "Error removing playground: {{message}}",
    "pgFechFail": "Failed to load playground: {{message}}",
    "pgFetchError": "Error loading playgrounds: {{message}}",
    "fieldsRequired": "All fields are required!",
    "pgAdded": "Playground was added.",
    "pgAddFail": "Could not add playground: {{message}}",
    "pgAddError": "Error adding playground: {{message}}",
    "pgOverview": "Playground overview",
    "pgAdd": "Add playground",
    "pg": "Playground",
    "numNum": "Number: {{number}}",
    "discNum": "Discipline: {{number}}",
    "pgAddNew": "Add new playground",
    "title": "Title",
    "enterPgTitle": "Enter playground title",
    "number": "Number",
    "enterNum": "Enter unique number",

    "mailInvalid": "Invalid e-mail format.",
    "invalidName":"Name contains invalid characters.",
    "invalidSurame":"Surname contains invalid characters.",
    "passwordsDiffer": "Passwords do not match.",
    "invalidAge":"Invalid date of birth.",
    "tooYoung":"User must be at least {{age}} years old.",
    "tooOld":"User cannot be older than {{age}} years.",
    "userExists": "A user with this e-mail already exists.",
    "regError": "Registration error: {{message}}",
    "regMistakes": "Please correct the errors in the form.",
    "registration": "Registration",
    "passwordCheck": "Password confirmation",
    "passwordReenter": "Re-enter password",
    "birthDate": "Date of birth",
    "hasAccount": "Already have an account?",
    "typeError":"Unexpected response type.",

    "robotAction": "Are you sure you want to {{conf}} this robot?",
    "confirm_lower": "confirm",
    "remove_lower": "remove",
    "robotUpdateFail": "Failed to update robot registration: {{message}}",
    "robotConfirmError": "Error confirming robot: {{message}}",
    "robotFetchFail": "Failed to load robots: {{message}}",
    "robotFetchError": "Error loading robots: {{message}}",
    "robotOverview": "Robot overview",
    "chooseYear": "Choose year",
    "findByTeam": "Search by team...",
    "confirmed": "Confirmed",
    "yes": "Yes",
    "no": "No",
    "noRobotsFoundYear": "No robots are present for this year.",

    "robotRegSuccess": "Robot was successfully registered for the discipline.",
    "robotRegMax": "You have exceeded the limit of robots per discipline.",
    "robotRegFail": "Failed to register robot for the discipline: {{message}}",
    "robotMissing": "Robot ID or competition year is missing.",
    "robotRemoveCheck": "Are you sure you want to delete the robot?",
    "robotRemoved": "Robot was successfully removed from the competition.",
    "robotRemoveError": "Error removing robot: {{data}}",
    "robotRemoveFail": "Failed to remove robot: {{text}}",
    "robotUnregisterFail": "Failed to unregister the robot from the discipline.",
    "robotFillName": "Please enter the robot name.",
    "robotExists": "A robot with this name already exists. Choose another name.",
    "robotAddFail": "Failed to add robot: {{data}}",
    "robotRenameFail":"Robot rename failed.",
    "robotRenamed":"Robot renamed successfully.",
    "robotYearOverview": "Robots overview for {{year}}",
    "robotAdd": "Add robot",
    "robotNum_colon": "Robot number: {{id}}",
    "robotChecked": "Checked: ",
    "categoryData": "Category: {{data}}",
    "disc_colon":"Discipline: ",
    "robotRegistered": "Robot registered. Waiting for organizer confirmation. Confirmation will be granted after an in-person inspection of the robot before the competition starts.",
    "robotRegister": "Register robot for a\u00a0discipline",
    "robotEnterName": "Enter robot name",

    "rules": "Robogames competition rules",
    "ageCat": "Age categories",
    "ageCatP1": "Based on date of birth (entered in the application), competitors are divided into the following categories:",
    "ageCatP2": "Pupils: up to 15 years (inclusive)",
    "ageCatP3": "Students and adults over 15 years",
    "parts": "Allowed parts and kits",
    "partsP": "Besides LEGO kits, Robogames aims to support robots built from anything. We want to motivate all robotics enthusiasts and students to participate regardless of whether they can afford the “official” LEGO kits. We believe success should be determined primarily by talent, effort, and a\u00a0bit of luck. We understand concerns of “official” kit users that they may be disadvantaged (e.g., weaker motors or batteries). However, they can be inspired at our competition and attach stronger (“unofficial”) components to their official kits.",
    "teams": "Competition teams",
    "teamsP": "In all competitions, a\u00a0multi-member team may compete with a\u00a0single robot. In case of victory, the team receives only one physical prize.",
    "reg": "Registration and limitations",
    "regP": "You may register one robot per team for each discipline. If a\u00a0team participates in multiple disciplines, a\u00a0different robot can be used for each discipline.",
    "schedule": "Competition schedule",
    "scheduleP1": "Before the competition starts, a\u00a0starting schedule will be prepared that competitors must follow. Failure to comply may result in a\u00a0penalty up to disqualification.",
    "scheduleP2": "On the referee’s call, the competitor must perform their run. Delays are allowed only for robot repairs or battery replacement.",
    "scheduleP3": "If the competitor refuses to compete when asked by the organizers, they will not be allowed to perform the discipline.",
    "robosumo": "Robosumo",
    "sumoP": "The goal is a\u00a0duel of two robots trying to push the opponent out of the ring.",
    "limit9m": "Time limit: 9\u00a0minutes",
    "max1kg": "Maximum robot weight: 1\u00a0kg",
    "max20cm": "Maximum robot dimensions: footprint max 20×20\u00a0cm, height unlimited",
    "size154cm": "Ring diameter: 154\u00a0cm",
    "rules_colon": "Rules:",
    "sumoRuleP1": "The goal is a\u00a0duel of two robots trying to push the opponent out of the ring.",
    "sumoRuleP2": "Robots may have unlimited height, but their footprint must be at most 20×20\u00a0cm. Compliance is checked by inserting the robot into a\u00a0frame with an inner size of 20×20\u00a0cm. The robot must pass through the frame.",
    "sumoRuleP3": "The robot may weigh at most 1\u00a0kg. The weight limit is checked before entering the ring and also after battery replacement.",
    "sumoRuleP4": "After the match starts, the robot may increase its dimensions, e.g., by deploying decoys.",
    "sumoRuleP5": "The robot may split into several separate parts or robots after the start. If any part ends up outside the ring, the robot loses.",
    "sumoRuleP6": "The robot must not use any techniques to change adhesion to the ring surface, whether mechanical or chemical.",
    "sumoRuleP7": "The robot must not soil the ring surface. It must not release any substances (glues, oils, degreasers, smoke, fog, etc.).",
    "sumoRuleP8": "The robot may only push the opponent. Destructive or disabling techniques are forbidden (e.g., shooting, hammer blows, flames, electric shocks, nets, or materials that tangle on wheel shafts, etc.).",
    "sumoRuleP9": "The sumo ring has a\u00a0diameter of 154\u00a0cm. It is made of black laminated chipboard 1\u00a0cm thick, mounted on 4\u00a0cm legs. The ring has a\u00a05\u00a0cm white border. Starting lines are brown, 2\u00a0cm wide, 20\u00a0cm apart—see dimensions in Fig.\u00a01.",
    "sumoRuleP10": "The ring is assembled from two halves, so there is a\u00a0joint along the center that is not perfectly smooth.",
    "sumoRuleP11": "A match lasts a\u00a0maximum of 9\u00a0minutes of active time and consists of up to three valid rounds, so one round is 3\u00a0minutes. The round winner gets 1\u00a0point and the match ends when one robot gets 2\u00a0points.",
    "sumoRuleP12": "The match starts with robots placed on designated marks facing away. On the referee’s signal, competitors start them. For the first 5\u00a0seconds, the robot must not move, but may signal activity (e.g., light or sound). Within 5\u00a0seconds after the start, competitors must step back at least 150\u00a0cm. If a\u00a0robot moves within the first five seconds, it may be penalized or disqualified.",
    "sumoRuleP13": "If a\u00a0robot crosses onto the other half of the ring for the first time, it must turn at least 90\u00a0° from the starting position.",
    "sumoRuleP14": "A robot loses a\u00a0round when any part of it touches the base beneath the ring.",
    "sumoRuleP15": "If after 3\u00a0minutes in the decisive third round both robots have the same number of points, the referee may order overtime or award the winning point for greater activity.",
    "sumoRuleP16": "If robots are locked together and/or their movement does not promise change for more than 5\u00a0seconds, the referee may order a\u00a0new round.",
    "sumoRuleP17": "If a\u00a0robot stops and stands still for more than 5\u00a0seconds, its opponent gets 1\u00a0point and the round ends.",
    "sumoRuleP18": "The robot moves autonomously only; no communication with the robot is allowed during a\u00a0round.",
    "sumoRuleP19": "Depending on the number of competitors, they are divided into groups with round-robin matches or into a\u00a0single group competing in the same way.",
    "sumoRuleP20": "The winner of the entire competition is the one who gains the most points.",
    "miniSumo": "Mini sumo 10×10",
    "miniP": "A Robosumo variant that shares its rules with this version.",
    "size77cm": "Ring diameter: 77\u00a0cm",
    "max10cm": "Maximum robot footprint: 10×10\u00a0cm",
    "max500g": "Maximum robot weight is 500\u00a0g.",
    "follow": "Line follower",
    "followP": "The winner is the robot that completes the track—black line on white background—the fastest. The track includes curves, right (sharp) corners, and intersections; the robot must follow the line from start to finish as precisely as possible.",
    "compParams": "Basic competition parameters:",
    "compVariants": "The competition has 2 variants:",
    "followP1": "robots with a\u00a0single line sensor (formerly \"LEGO\")",
    "followP2": "robots with multiple line sensors (formerly \"MCU\")",
    "limit3min": "Time limit: 3 minutes",
    "max25cm": "Maximum robot dimensions: footprint max 25×25 cm, height unlimited",
    "size280cm": "Track size: 280×200 cm",
    "followRuleP1": "The track is made of white plastic foil (used for advertising banners) sized 280×200\u00a0cm with a\u00a015\u00a0mm wide black line. The smallest curve radius is 10\u00a0cm; the minimum spacing of parallel lines (“grid”) is 20\u00a0cm.",
    "followRuleP2": "The robot must follow the line from start to finish.",
    "followRuleP3": "If the robot leaves the line, finds it again, and does not shorten the route, the run is valid.",
    "followRuleP4": "If the robot leaves the line, finds it again, and shortens the route, the referee declares the run invalid.",
    "followRuleP5": "Until the 3-minute limit expires, the robot may be placed back at the start to attempt another run. The result is the shortest time.",
    "followRuleP6": "If the robot never reaches the finish within the time limit, the referee records only the number of checkpoints passed and the maximum attempt time.",
    "followRuleP7": "Robots that do not finish are penalized a\u00a0fixed value (1\u00a0minute) for each checkpoint not passed; the penalty is added to the attempt.",
    "followRuleP8": "The robot moves autonomously only; during the run, any communication with the robot is forbidden.",
    "followRuleP9": "The competitor performs the “live” competition run only once; repeated attempts are not allowed.",
    "followRuleP10": "Unless the registration form states otherwise, robots must perform their attempt on both track types (see below).",
    "variants_colon": "Variants:",
    "lego": "LEGO - The robot is equipped with only one optical sensor",
    "mcu": "MCU - The robot may be equipped with multiple sensors",
    "track": "Track examples (the displayed pattern may not be used):",
    "cleaner": "Robot cleaner",
    "maxNone": "Maximum robot weight: not limited",
    "size140cm": "Competition area size: 140×100 cm",
    "commonRules": "Common rules",
    "cleanerP1": "The robot moves on an area sized 140×100 cm.",
    "cleanerP2": "The area is made of a\u00a0white Sololak board bordered with 30\u00a0mm black electrical tape.",
    "cleanerP3": "Six Lego® Duplo blocks are placed on the area.",
    "cleanerP4": "The robot has three attempts, each three minutes long, to deliver as many blocks as possible to the defined zone.",
    "cleanerP5": "The delivery zone is a\u00a0circular sector with a\u00a0radius of 30\u00a0cm in a\u00a0corner of the competition area.",
    "cleanerP6": "The starting position is diagonally opposite the delivery zone.",
    "cleanerP7": "In the target zone there is a\u00a0box at least 30\u00a0cm high, placed at a\u00a045\u00a0° angle to the edges of the area at a\u00a0distance of 10\u00a0cm.",
    "cleanerP8": "Blocks are placed randomly and their positions are identical for each competitor.",
    "cleanerP9": "The robot has three minutes to collect blocks and deliver them to the defined place. If not all are collected within the limit, one minute is added to the attempt time for each block not delivered.",
    "cleanerP10": "The competitor may end the attempt at any time by notifying the referee. The referee records the attempt time and the number of blocks delivered.",
    "cleanerP11": "The winner is the robot with the shortest attempt time.",
    "cleanerV1": "The robot only delivers blocks to the defined area.",
    "cleanerV1P1": "A block counts if, after the attempt ends, at least part of it is inside the defined area.",
    "cleanerV1P2": "Blocks delivered and then pushed out again are not counted.",
    "cleanerV2": "The robot throws blocks into a\u00a0box.",
    "cleanerV2P1": "In the corner of the target zone, a\u00a0box is placed instead of the previous container; blocks are thrown into it.",
    "cleanerV2P2": "The box dimensions are 210×210×100\u00a0mm. The back side is 300\u00a0mm high.",
    "cleanerV2P3": "A block counts only if, after the attempt, it is inside the box.",
    "reference": "Reference",

    "discRemoveCheck":"Are you sure you want to remove this discipline?",
    "discRemoveFail":"Failed to remove discipline.",
    "networkFail":"Network response was not ok.",
    "discEditFail":"Failed to edit discipline.",
    "discCreateFail":"Failed to create discipline.",
    "discAdd": "Add discipline",
    "discEdit": "Edit discipline",
    "discAddNew": "Add new discipline",
    "discName": "Discipline name",
    "descript": "Description",
    "scoreAgrr": "Score aggregation",
    "min": "MIN",
    "max": "MAX",
    "sum": "SUM",
    "timeLimit": "Time limit",
    "maxRounds": "Maximum number of rounds (-1 = unlimited)",
    "discEditCreate": "Do you really want to {{edit}} this discipline?",
    "edit_lower": "edit",
    "create_lower": "create",
    "send": "Submit",
    "evalType": "Evaluation method:",
    "time_colon": "Time:",
    "secs": "{{time}} seconds",
    "maxRounds_colon": "Maximum number of rounds:",
    "unlimited": "Unlimited",
    "remove": "Remove",

    "fillAll": "Please fill in all fields.",
    "userCreated": "User added successfully!",
    "userCreateFail": "Failed to add user.",
    "roleAddedRemoved": "Role {{action}} successfully!",
    "added_lower": "added",
    "removed_lower": "removed",
    "roleUpdateFail": "Failed to change role.",
    "selectRoleFirst": "Select a\u00a0role first.",
    "userRemove": "Are you sure you want to remove this user?",
    "userRemoved": "User was removed successfully.",
    "userRemoveFail": "Failed to remove user.",
    "userNotFound": "No user found with this ID or e-mail.",
    "userAdd": "Add user",
    "userSearch": "Search by ID/e-mail",
    "search": "Search",
    "uuid": "UUID",
    "role": "Role",
    "action": "Action",
    "roleEdit": "Edit role",
    "userAddNew": "Add new user",
    "enterName": "Enter first name",
    "enterSurname": "Enter last name",
    "enterMail": "Enter e-mail",
    "enterPassword": "Enter password",
    "add": "Add",
    "selectRole": "Select role",
    "roleAdd": "Add role",
    "roleRemove": "Remove role",

    "userUpdateFail": "Could not update user details.",
    "dataSaved": "Details saved successfully.",
    "dataSaveFail": "Saving information failed. Please try again later.",
    "noChanges": "No changes were made.",
    "infoEdit": "Edit information",

    "wrongMailPassword": "Incorrect e-mail or password",

    "lightMode": "Light mode",
    "darkMode": "Dark mode",
    "cz":"CZ",
    "en":"EN",

    "about": "About the competition",

     "notification": "Notifications",
    "notifHere": "Your notifications will appear here",
    "inviteFrom": "You have a\u00a0team invitation from ",
    "myProfile": "My profile",
    "myTeam": "My team",
    "logOut": "Log out",
    "logIn": "Log in",
    "search_caps": "SEARCH",
    
    "matchEval": "Match Evaluation",
    "adminMenu": "Admin Menu",
    "home": "Home",
    "disc": "Disciplines",
    "result": "Results",
    "rule": "Rules",
    "allTeams": "All Teams",
    "contact": "Contact",
    "manageComps": "Manage Competitions",
    "particips": "Competition Participants",
    "compTeamRegister": "Team Registration",
    "robotRegistration": "Robot Registration",
    "robotConfirm": "Robot Confirmation"
}